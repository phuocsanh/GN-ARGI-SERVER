### ===== SALES INVOICE MANAGEMENT APIs =====

### Thiết lập biến mặc định
@access_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJhY2Nlc3MiLCJleHAiOjE3NDYxMTYyOTQsImp0aSI6IjNhNDY5YWM5LTgzZWYtNGRkNC1iYjcwLTJlNThiMDY1ODE1ZCIsImlhdCI6MTc0NjExMjY5NCwiaXNzIjoic2hvcGRldmdvIiwic3ViIjoiM2NsaXRva2VuYzlhNzdmZTEtMDk0Zi00MjY1LWI2MWQtODE4NThjYzQyOGY4In0.RSAE9aNxmVYo8_BK4k_NHSr2Ub_U2UYZgT0S7co2w2U
@base_url = http://localhost:8002/v1

### ===== QUẢN LÝ PHIẾU BÁN HÀNG =====

### 1. Tạo phiếu bán hàng mới
POST {{base_url}}/manage/sales/invoice
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "customer_name": "Nguyễn Văn A",
  "customer_phone": "0123456789",
  "customer_email": "nguyenvana@email.com",
  "customer_address": "123 Đường ABC, Quận 1, TP.HCM",
  "payment_method": "CASH",
  "discount_amount": "50000",
  "delivery_date": "2024-12-26T10:00:00Z",
  "notes": "Giao hàng buổi sáng",
  "items": [
    {
      "product_id": 1,
      "quantity": 10,
      "unit_price": "50000.00",
      "discount_percent": "10",
      "notes": "Sản phẩm tươi"
    },
    {
      "product_id": 2,
      "quantity": 5,
      "unit_price": "30000.00",
      "discount_amount": "15000",
      "notes": "Đóng gói cẩn thận"
    }
  ]
}

### 2. Tạo phiếu bán hàng với thanh toán chuyển khoản
POST {{base_url}}/manage/sales/invoice
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "customer_name": "Trần Thị B",
  "customer_phone": "0987654321",
  "customer_email": "tranthib@email.com",
  "payment_method": "BANK_TRANSFER",
  "notes": "Thanh toán chuyển khoản",
  "items": [
    {
      "product_id": 3,
      "quantity": 20,
      "unit_price": "25000.00"
    }
  ]
}

### 3. Lấy danh sách phiếu bán hàng (public endpoint)
GET {{base_url}}/sales/invoices?page=1&limit=10

### 4. Lấy danh sách phiếu bán hàng với filter (private endpoint)
GET {{base_url}}/manage/sales/invoices?page=1&limit=10&status=1&payment_status=1
Authorization: Bearer {{access_token}}

### 5. Lấy danh sách phiếu theo trạng thái đã hoàn thành
GET {{base_url}}/manage/sales/invoices?page=1&limit=10&status=4
Authorization: Bearer {{access_token}}

### 6. Lấy danh sách phiếu theo số điện thoại khách hàng
GET {{base_url}}/manage/sales/invoices?page=1&limit=10&customer_phone=0123456789
Authorization: Bearer {{access_token}}

### 7. Lấy danh sách phiếu theo khoảng thời gian
GET {{base_url}}/manage/sales/invoices?page=1&limit=10&from_date=2024-12-01T00:00:00Z&to_date=2024-12-31T23:59:59Z
Authorization: Bearer {{access_token}}

### 8. Lấy chi tiết phiếu bán hàng (public endpoint)
GET {{base_url}}/sales/invoice/1

### 9. Lấy chi tiết phiếu bán hàng với items (private endpoint)
GET {{base_url}}/manage/sales/invoice/1
Authorization: Bearer {{access_token}}

### 10. Tìm phiếu bán hàng theo mã phiếu
GET {{base_url}}/manage/sales/invoice/code/SI-001
Authorization: Bearer {{access_token}}

### 11. Cập nhật thông tin phiếu bán hàng
PUT {{base_url}}/manage/sales/invoice/1
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "customer_name": "Nguyễn Văn A (Updated)",
  "customer_address": "456 Đường XYZ, Quận 2, TP.HCM",
  "payment_method": "CARD",
  "payment_status": 2,
  "discount_amount": "100000",
  "notes": "Cập nhật thông tin khách hàng"
}

### 12. Xóa phiếu bán hàng (chỉ khi ở trạng thái nháp)
DELETE {{base_url}}/manage/sales/invoice/1
Authorization: Bearer {{access_token}}

### ===== CÁC HÀNH ĐỘNG VỚI PHIẾU BÁN HÀNG =====

### 13. Xác nhận phiếu bán hàng
POST {{base_url}}/manage/sales/invoice/1/confirm
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "checked_by_user_id": 1,
  "notes": "Đã kiểm tra và xác nhận phiếu bán hàng"
}

### 14. Đánh dấu đã giao hàng (cập nhật inventory)
POST {{base_url}}/manage/sales/invoice/1/deliver
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "delivered_by_user_id": 1,
  "delivery_date": "2024-12-25T14:30:00Z",
  "notes": "Đã giao hàng thành công cho khách hàng"
}

### 15. Hoàn thành phiếu bán hàng
POST {{base_url}}/manage/sales/invoice/1/complete
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "completed_by_user_id": 1,
  "completed_date": "2024-12-25T15:00:00Z",
  "payment_status": 3,
  "notes": "Giao dịch hoàn tất, khách hàng đã thanh toán đủ"
}

### 16. Hủy phiếu bán hàng (hoàn trả inventory nếu đã giao)
POST {{base_url}}/manage/sales/invoice/1/cancel
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "cancelled_by_user_id": 1,
  "reason": "Khách hàng yêu cầu hủy đơn hàng do thay đổi nhu cầu"
}

### ===== QUẢN LÝ CHI TIẾT SẢN PHẨM TRONG PHIẾU =====

### 17. Lấy danh sách sản phẩm trong phiếu bán hàng
GET {{base_url}}/manage/sales/invoice/1/items
Authorization: Bearer {{access_token}}

### 18. Cập nhật thông tin một sản phẩm trong phiếu
PUT {{base_url}}/manage/sales/invoice/item/1
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "quantity": 15,
  "unit_price": "55000.00",
  "discount_percent": "15",
  "notes": "Cập nhật số lượng và giá"
}

### 19. Xóa một sản phẩm khỏi phiếu bán hàng
DELETE {{base_url}}/manage/sales/invoice/item/1
Authorization: Bearer {{access_token}}

### ===== TEST CASES CHO CÁC TRƯỜNG HỢP ĐẶC BIỆT =====

### 20. Test tạo phiếu không có sản phẩm (sẽ lỗi)
POST {{base_url}}/manage/sales/invoice
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "customer_name": "Test Customer",
  "payment_method": "CASH",
  "items": []
}

### 21. Test tạo phiếu với payment method không hợp lệ
POST {{base_url}}/manage/sales/invoice
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "customer_name": "Test Customer",
  "payment_method": "INVALID_METHOD",
  "items": [
    {
      "product_id": 1,
      "quantity": 1,
      "unit_price": "10000.00"
    }
  ]
}

### 22. Test với ID phiếu không tồn tại
GET {{base_url}}/manage/sales/invoice/999999
Authorization: Bearer {{access_token}}

### 23. Test với mã phiếu không tồn tại
GET {{base_url}}/manage/sales/invoice/code/INVALID-CODE
Authorization: Bearer {{access_token}}

### 24. Test cập nhật phiếu với trạng thái không hợp lệ
PUT {{base_url}}/manage/sales/invoice/1
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "status": 999,
  "payment_status": 999
}

### 25. Test xác nhận phiếu đã được xác nhận rồi
POST {{base_url}}/manage/sales/invoice/1/confirm
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "checked_by_user_id": 2,
  "notes": "Thử xác nhận lại phiếu đã được xác nhận"
}

### 26. Test giao hàng phiếu chưa được xác nhận
POST {{base_url}}/manage/sales/invoice/2/deliver
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "delivered_by_user_id": 1,
  "delivery_date": "2024-12-25T14:30:00Z",
  "notes": "Thử giao hàng phiếu chưa xác nhận"
}

### 27. Test truy cập endpoint yêu cầu auth mà không có token
GET {{base_url}}/manage/sales/invoices

### 28. Test với token không hợp lệ
GET {{base_url}}/manage/sales/invoices
Authorization: Bearer invalid_token_here

### ===== TEST DỮ LIỆU LỚN =====

### 29. Tạo phiếu bán hàng với nhiều sản phẩm
POST {{base_url}}/manage/sales/invoice
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "customer_name": "Khách hàng VIP",
  "customer_phone": "0999888777",
  "customer_email": "vip@email.com",
  "customer_address": "789 VIP Street, Quận 3, TP.HCM",
  "payment_method": "BANK_TRANSFER",
  "discount_amount": "200000",
  "notes": "Đơn hàng lớn cho khách VIP",
  "items": [
    {
      "product_id": 1,
      "quantity": 50,
      "unit_price": "45000.00",
      "discount_percent": "5",
      "notes": "Nấm shiitake cao cấp"
    },
    {
      "product_id": 2,
      "quantity": 30,
      "unit_price": "35000.00",
      "discount_percent": "3",
      "notes": "Nấm button tươi"
    },
    {
      "product_id": 3,
      "quantity": 20,
      "unit_price": "25000.00",
      "notes": "Rau sạch organic"
    },
    {
      "product_id": 4,
      "quantity": 10,
      "unit_price": "150000.00",
      "discount_amount": "50000",
      "notes": "Cây cảnh bonsai mini"
    }
  ]
}

### 30. Test phân trang với số lượng lớn
GET {{base_url}}/manage/sales/invoices?page=1&limit=50
Authorization: Bearer {{access_token}}

### ===== TEST WORKFLOW HOÀN CHỈNH =====

### 31. Workflow: Tạo -> Xác nhận -> Giao hàng -> Hoàn thành
# Step 1: Tạo phiếu mới
POST {{base_url}}/manage/sales/invoice
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "customer_name": "Workflow Test Customer",
  "customer_phone": "0111222333",
  "payment_method": "CASH",
  "items": [
    {
      "product_id": 1,
      "quantity": 5,
      "unit_price": "40000.00"
    }
  ]
}

### 32. Step 2: Xác nhận phiếu (thay ID=2 bằng ID thực từ response trên)
POST {{base_url}}/manage/sales/invoice/2/confirm
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "checked_by_user_id": 1,
  "notes": "Workflow test - xác nhận"
}

### 33. Step 3: Giao hàng
POST {{base_url}}/manage/sales/invoice/2/deliver
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "delivered_by_user_id": 1,
  "delivery_date": "2024-12-25T16:00:00Z",
  "notes": "Workflow test - giao hàng"
}

### 34. Step 4: Hoàn thành
POST {{base_url}}/manage/sales/invoice/2/complete
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "completed_by_user_id": 1,
  "completed_date": "2024-12-25T16:30:00Z",
  "payment_status": 3,
  "notes": "Workflow test - hoàn thành"
}

### ===== PERFORMANCE TEST =====

### 35. Test tạo nhiều phiếu liên tiếp (có thể chạy nhiều lần)
POST {{base_url}}/manage/sales/invoice
Content-Type: application/json
Authorization: Bearer {{access_token}}

{
  "customer_name": "Performance Test {{$randomInt}}",
  "customer_phone": "09{{$randomInt}}",
  "payment_method": "CASH",
  "items": [
    {
      "product_id": {{$randomInt}},
      "quantity": {{$randomInt}},
      "unit_price": "{{$randomInt}}000.00"
    }
  ]
}