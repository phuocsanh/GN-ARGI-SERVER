// Main package cho GN-Farm Go server
// Entry point c·ªßa ·ª©ng d·ª•ng Go backend
package main

import (
	"gn-farm-go-server/internal/initialize" // Package kh·ªüi t·∫°o c√°c th√†nh ph·∫ßn h·ªá th·ªëng
	"log"

	// Swagger dependencies cho t√†i li·ªáu API
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// C√°c annotation cho Swagger API documentation
// @title           API Documentation GN-FARM - T√†i li·ªáu API GN-FARM
// @version         1.0.0 - Phi√™n b·∫£n hi·ªán t·∫°i
// @description     H·ªá th·ªëng qu·∫£n l√Ω n√¥ng tr·∫°i GN-FARM Backend API
// @termsOfService  github.com/anonystick/go-ecommerce-backend-go

// @contact.name   TEAM TIPSGO - ƒê·ªôi ph√°t tri·ªÉn
// @contact.url    github.com/anonystick/go-ecommerce-backend-go
// @contact.email  tipsgo@gmail.com

// @license.name  Apache 2.0 - Gi·∫•y ph√©p s·ª≠ d·ª•ng
// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html

// @host      localhost:8002 - ƒê·ªãa ch·ªâ server local
// @BasePath  /v1 - Base path cho t·∫•t c·∫£ API endpoints
// @schema http - S·ª≠ d·ª•ng HTTP protocol
// H√†m main - ƒëi·ªÉm kh·ªüi ƒë·∫ßu c·ªßa ·ª©ng d·ª•ng Go server
func main() {
	// Kh·ªüi t·∫°o router v√† c√°c th√†nh ph·∫ßn h·ªá th·ªëng (database, redis, logging, etc.)
	r := initialize.Run()
	log.Println("üöÄ Hot reload: server started - hot reloading is working!")

	// C·∫•u h√¨nh Swagger UI ƒë·ªÉ xem t√†i li·ªáu API tr√™n tr√¨nh duy·ªát
	// Truy c·∫≠p t·∫°i: http://localhost:8002/swagger/index.html
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// Kh·ªüi ƒë·ªông HTTP server tr√™n port 8002
	// Server s·∫Ω l·∫Øng nghe c√°c request HTTP tr√™n localhost:8002
	r.Run(":8002")
}
